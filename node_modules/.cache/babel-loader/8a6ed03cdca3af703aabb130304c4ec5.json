{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angie\\\\Desktop\\\\REACT\\\\projects\\\\redux\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import from redux\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'; // helps inject store into components\n\nimport counterReducer from './store/reducers/counter';\nimport resultReducer from './store/reducers/result';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nvar rootReducer = combineReducers({\n  ctr: counterReducer,\n  res: resultReducer\n}); // create a middleware w/ nested functions\n\nvar logger = function logger(store) {\n  return function (next) {\n    return function (action) {\n      console.log('[Middleware] is dispatching this action from index.js:', action);\n      var result = next(action);\n      console.log('[Middleware]\\'s next state:', store.getState());\n      return result;\n    };\n  };\n};\n\nvar store = createStore(rootReducer, applyMiddleware(logger)); // use Provider to hook the store to the application\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n})), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["C:\\Users\\angie\\Desktop\\REACT\\projects\\redux\\src\\index.js"],"names":["React","ReactDOM","createStore","combineReducers","applyMiddleware","Provider","counterReducer","resultReducer","App","registerServiceWorker","rootReducer","ctr","res","logger","store","next","action","console","log","result","getState","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAAwC;;AAExC,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,IAAMC,WAAW,GAAGP,eAAe,CAAC;AAChCQ,EAAAA,GAAG,EAAEL,cAD2B;AAEhCM,EAAAA,GAAG,EAAEL;AAF2B,CAAD,CAAnC,C,CAKA;;AACA,IAAMM,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACpB,SAAO,UAAAC,IAAI,EAAI;AACX,WAAO,UAAAC,MAAM,EAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,wDAAZ,EAAsEF,MAAtE;AACA,UAAMG,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CJ,KAAK,CAACM,QAAN,EAA3C;AACA,aAAOD,MAAP;AACH,KALD;AAMH,GAPD;AAQH,CATD;;AAWA,IAAML,KAAK,GAAGZ,WAAW,CAACQ,WAAD,EAAcN,eAAe,CAACS,MAAD,CAA7B,CAAzB,C,CAEA;;AACAZ,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CAAhB,EAA4DQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5D;AACAd,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import from redux\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'; // helps inject store into components\n\nimport counterReducer from './store/reducers/counter';\nimport resultReducer from './store/reducers/result';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst rootReducer = combineReducers({\n    ctr: counterReducer,\n    res: resultReducer\n});\n\n// create a middleware w/ nested functions\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log('[Middleware] is dispatching this action from index.js:', action);\n            const result = next(action);\n            console.log('[Middleware]\\'s next state:', store.getState());\n            return result;\n        }\n    }\n}\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\n// use Provider to hook the store to the application\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}