{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\angie\\\\Desktop\\\\REACT\\\\projects\\\\redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  counter: 0,\n  results: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return _objectSpread({}, state, {\n        counter: state.counter + 1\n      });\n\n    case 'DECREMENT':\n      return _objectSpread({}, state, {\n        counter: state.counter - 1\n      });\n\n    case 'ADD':\n      return _objectSpread({}, state, {\n        counter: state.counter + action.value\n      });\n\n    case 'SUBTRACT':\n      return _objectSpread({}, state, {\n        counter: state.counter - action.value\n      });\n\n    case 'STORE_RESULT':\n      return _objectSpread({}, state, {\n        result: state.result.concat() // use concat to return a new array to avoid mutating the\n\n      });\n\n    case 'DELETE_RESULT':\n      return {};\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\angie\\Desktop\\REACT\\projects\\redux\\src\\store\\reducer.js"],"names":["initialState","counter","results","reducer","state","action","type","value","result","concat"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CADQ;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,+BACOF,KADP;AAEIH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAF7B;;AAIJ,SAAK,WAAL;AACI,+BACOG,KADP;AAEIH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAF7B;;AAIJ,SAAK,KAAL;AACI,+BACOG,KADP;AAEIH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE;AAFpC;;AAIJ,SAAK,UAAL;AACI,+BACOH,KADP;AAEIH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE;AAFpC;;AAIJ,SAAK,cAAL;AACI,+BACOH,KADP;AAEII,QAAAA,MAAM,EAAEJ,KAAK,CAACI,MAAN,CAAaC,MAAb,EAFZ,CAEkC;;AAFlC;;AAIJ,SAAK,eAAL;AACI,aAAO,EAAP;AA3BR;;AA+BA,SAAOL,KAAP;AACH,CAjCD;;AAmCA,eAAeD,OAAf","sourcesContent":["const initialState = {\r\n    counter: 0,\r\n    results: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'INCREMENT': \r\n            return {\r\n                ...state,\r\n                counter: state.counter + 1\r\n            }\r\n        case 'DECREMENT':\r\n            return {\r\n                ...state,\r\n                counter: state.counter - 1\r\n            }\r\n        case 'ADD':\r\n            return {\r\n                ...state,\r\n                counter: state.counter + action.value\r\n            }\r\n        case 'SUBTRACT':\r\n            return {\r\n                ...state,\r\n                counter: state.counter - action.value\r\n            }\r\n        case 'STORE_RESULT':\r\n            return {\r\n                ...state,\r\n                result: state.result.concat() // use concat to return a new array to avoid mutating the\r\n            }\r\n        case 'DELETE_RESULT':\r\n            return {\r\n\r\n            }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}